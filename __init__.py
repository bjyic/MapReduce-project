
import typecheck
import fellow


@fellow.app.task(name="mr.top100_words_simple_plain")
@typecheck.returns("100 * (string, count)")
def top100_words_simple_plain():
    return [("have", 69087),
            ("moved", 69255),
            ("now", 74596),
            ("stub", 70368),
            ("2009", 69337),
            ("his", 75778),
            ("they", 76751),
            ("united", 86507),
            ("if", 77047),
            ("one", 71327),
            ("states", 72699),
            ("03", 77703),
            ("b", 85584),
            ("nbsp", 89135),
            ("cite", 83289),
            ("at", 112928),
            ("2013", 153752),
            ("com", 122914),
            ("football", 90184),
            ("people", 94283),
            ("5", 82212),
            ("span", 74840),
            ("american", 73474),
            ("small", 102848),
            ("url", 79642),
            ("color", 121533),
            ("by", 218491),
            ("as", 159125),
            ("he", 126278),
            ("font", 153538),
            ("i", 119877),
            ("wikitext", 188566),
            ("from", 152852),
            ("d", 169346),
            ("timestamp", 377863),
            ("are", 134268),
            ("talk", 123576),
            ("not", 95261),
            ("or", 113222),
            ("3", 122138),
            ("user", 154075),
            ("www", 156239),
            ("other", 82511),
            ("align", 148689),
            ("10", 93360),
            ("date", 82360),
            ("first", 83424),
            ("be", 109563),
            ("redirect", 111336),
            ("minor", 117167),
            ("text", 604352),
            ("page", 439939),
            ("format", 386311),
            ("comment", 350146),
            ("amp", 243908),
            ("model", 381564),
            ("2", 203461),
            ("revision", 380467),
            ("s", 295792),
            ("br", 166273),
            ("quot", 1400092),
            ("that", 160304),
            ("with", 137882),
            ("title", 539917),
            ("on", 244426),
            ("for", 216011),
            ("of", 972204),
            ("and", 634202),
            ("x", 202304),
            ("in", 659218),
            ("the", 1596419),
            ("sha1", 376839),
            ("id", 1142905),
            ("lt", 1205656),
            ("to", 489127),
            ("username", 361677),
            ("this", 123821),
            ("ref", 370336),
            ("wiki", 199562),
            ("1", 250429),
            ("preserve", 188766),
            ("xml", 189061),
            ("is", 407340),
            ("name", 180142),
            ("category", 380599),
            ("new", 94893),
            ("4", 95648),
            ("a", 581510),
            ("gt", 1211888),
            ("was", 213411),
            ("space", 197216),
            ("it", 218535),
            ("ns", 378544),
            ("an", 101364),
            ("0", 358489),
            ("style", 136602),
            ("center", 111562),
            ("http", 217221),
            ("contributor", 377226),
            ("parentid", 292767)]

@fellow.app.task(name="mr.top100_words_simple_text")
@typecheck.returns("100 * (string, count)")
def top100_words_simple_text():
    return [("year", 52097),
            ("world", 52341),
            ("league", 52268),
            ("were", 53571),
            ("city", 53827),
            ("file", 54220),
            ("but", 55200),
            ("player", 60089),
            ("publisher", 60197),
            ("sup", 55723),
            ("county", 54129),
            ("n", 57218),
            ("can", 58981),
            ("2010", 56991),
            ("2008", 60715),
            ("one", 70421),
            ("web", 62273),
            ("or", 105956),
            ("also", 62716),
            ("6", 63688),
            ("d", 57408),
            ("de", 54509),
            ("m", 54429),
            ("bgcolor", 60569),
            ("2009", 61422),
            ("states", 69952),
            ("c", 66282),
            ("other", 80060),
            ("3", 118582),
            ("an", 100372),
            ("span", 74704),
            ("they", 76638),
            ("football", 88841),
            ("jpg", 67415),
            ("has", 65234),
            ("with", 131565),
            ("that", 158634),
            ("accessdate", 65074),
            ("if", 76576),
            ("stub", 67914),
            ("be", 108703),
            ("right", 64045),
            ("image", 59891),
            ("10", 62931),
            ("utc", 67506),
            ("which", 56053),
            ("b", 84799),
            ("by", 148339),
            ("are", 133868),
            ("united", 83022),
            ("small", 102606),
            ("s", 290253),
            ("new", 90612),
            ("his", 75649),
            ("4", 88886),
            ("cite", 83011),
            ("nbsp", 89044),
            ("br", 166156),
            ("in", 647365),
            ("from", 143781),
            ("he", 126088),
            ("date", 81969),
            ("style", 136146),
            ("user", 146747),
            ("is", 405172),
            ("a", 573445),
            ("this", 122220),
            ("1", 234970),
            ("name", 177141),
            ("at", 111698),
            ("2", 197639),
            ("as", 156866),
            ("font", 153481),
            ("and", 619775),
            ("to", 445509),
            ("have", 68696),
            ("com", 122505),
            ("for", 209633),
            ("people", 89867),
            ("the", 1580125),
            ("www", 156145),
            ("0", 214061),
            ("color", 120393),
            ("5", 80076),
            ("first", 83006),
            ("american", 70481),
            ("category", 325598),
            ("http", 216905),
            ("url", 79569),
            ("center", 111281),
            ("talk", 112782),
            ("not", 93363),
            ("it", 215621),
            ("title", 116026),
            ("ref", 370025),
            ("on", 186280),
            ("of", 947501),
            ("align", 148625),
            ("was", 212996),
            ("i", 117940)]

@fellow.app.task(name="mr.top100_words_simple_no_metadata")
@typecheck.returns("100 * (string, count)")
def top100_words_simple_no_metadata():
    return [("year", 52097),
            ("world", 52341),
            ("league", 52268),
            ("were", 53571),
            ("city", 53827),
            ("file", 54220),
            ("but", 55200),
            ("player", 60089),
            ("publisher", 60197),
            ("sup", 55723),
            ("county", 54129),
            ("n", 57218),
            ("can", 58981),
            ("2010", 56991),
            ("2008", 60715),
            ("one", 70421),
            ("web", 62273),
            ("or", 105956),
            ("also", 62716),
            ("6", 63688),
            ("d", 57408),
            ("de", 54509),
            ("m", 54429),
            ("bgcolor", 60569),
            ("2009", 61422),
            ("states", 69952),
            ("c", 66282),
            ("other", 80060),
            ("3", 118582),
            ("an", 100372),
            ("span", 74704),
            ("they", 76638),
            ("football", 88841),
            ("jpg", 67415),
            ("has", 65234),
            ("with", 131565),
            ("that", 158634),
            ("accessdate", 65074),
            ("if", 76576),
            ("stub", 67914),
            ("be", 108703),
            ("right", 64045),
            ("image", 59891),
            ("10", 62931),
            ("utc", 67506),
            ("which", 56053),
            ("b", 84799),
            ("by", 148339),
            ("are", 133868),
            ("united", 83022),
            ("small", 102606),
            ("s", 290253),
            ("new", 90612),
            ("his", 75649),
            ("4", 88886),
            ("cite", 83011),
            ("nbsp", 89044),
            ("br", 166156),
            ("in", 647365),
            ("from", 143781),
            ("he", 126088),
            ("date", 81969),
            ("style", 136146),
            ("user", 146747),
            ("is", 405172),
            ("a", 573445),
            ("this", 122220),
            ("1", 234970),
            ("name", 177141),
            ("at", 111698),
            ("2", 197639),
            ("as", 156866),
            ("font", 153481),
            ("and", 619775),
            ("to", 445509),
            ("have", 68696),
            ("com", 122505),
            ("for", 209633),
            ("people", 89867),
            ("the", 1580125),
            ("www", 156145),
            ("0", 214061),
            ("color", 120393),
            ("5", 80076),
            ("first", 83006),
            ("american", 70481),
            ("category", 325598),
            ("http", 216905),
            ("url", 79569),
            ("center", 111281),
            ("talk", 112782),
            ("not", 93363),
            ("it", 215621),
            ("title", 116026),
            ("ref", 370025),
            ("on", 186280),
            ("of", 947501),
            ("align", 148625),
            ("was", 212996),
            ("i", 117940)]


languages = ["simple", "thai"]
ngrams = [1, 2, 3]
keys = [language + str(ngram) for language in languages
                              for ngram in ngrams]  # noqa

@fellow.app.task(name="mr.wikipedia_entropy")
@typecheck.returns_dict("number", keys)
def wikipedia_entropy():
    return {"simple1": 5.07, #5.084462332383058,
            "simple2": (9.149424766327705/2),
            "simple3": (12.485685534861554/3),
            "thai1": 6.275580293022282,
            "thai2": (10.735799076221525/2),
            "thai3": (14.12700225346352/3),}

keys = ["count", "mean", "stdev", "5%", "25%", "median", "75%", "95%"]
@fellow.app.task(name="mr.link_stats_simple")
@typecheck.returns_dict("number", keys)
def link_stats_simple():
    return {"count": 184829.,
            "mean": 14.720936649551748,
            "stdev": 46.60893606357073,
            "5%": 1.,
            "25%": 1.,
            "median": 6.,
            "75%": 16.,
            "95%": 48.} 

@fellow.app.task(name="mr.link_stats_english")
@typecheck.returns_dict("number", keys)
def link_sstats_english():
    return {"count": 15017088.,
            "mean": 13.68571729752133,
            "stdev": 61.250221867608175,
            "5%": 0.,
            "25%": 1.,
            "median": 1.,
            "75%": 13.,
            "95%": 53.}

@fellow.app.task(name="mr.double_link")
@typecheck.returns("100 * ((string, string), number)")
def double_link_stats():
    return [(("list of cities in illinois", "illinois"), 0.06853288511592162),
            (("communes of the yonne department", "france"), 0.06852967803604743),
            (("communes of the yonne department", "departments of france"), 0.06842373538233407),
            (("communes of the pyr\u00e9n\u00e9es-atlantiques department", "france"), 0.0683845716624595),
            (("communes of the yonne department", "yonne"), 0.06831521922286249),
            (("communes of the yonne department", "communes of france"), 0.06830578303508235),
            (("communes of the pyr\u00e9n\u00e9es-atlantiques department", "departments of france"), 0.06829609827611377),
            (("communes of the pyr\u00e9n\u00e9es-atlantiques department", "pyr\u00e9n\u00e9es-atlantiques"), 0.06824425471923101),
            (("communes of the pyr\u00e9n\u00e9es-atlantiques department", "commune in france"), 0.06819759551803654),
            (("list of cities in illinois", "united states"), 0.06784763700730939),
            (("communes of the allier department", "france"), 0.06763361651363364),
            (("communes of the vend\u00e9e department", "france"), 0.0676334035749745),
            (("communes of the allier department", "allier"), 0.06746945340827111),
            (("communes of the vend\u00e9e department", "pays de la loire"), 0.06746595730014567),
            (("communes of the allier department", "departments of france"), 0.0673928183240224),
            (("communes of the vend\u00e9e department", "communes of france"), 0.06727952926136863),
            (("communes of the vend\u00e9e department", "vend\u00e9e"), 0.06727952926136863),
            (("communes of the allier department", "communes of france"), 0.0672073583833696),
            (("list of cities in illinois", "city"), 0.0660479641348937),
            (("list of cities in indiana", "indiana"), 0.06580154439249325),
            (("list of cities in indiana", "united states"), 0.06508685167780054),
            (("communes of the mayenne department", "france"), 0.06467249833618127),
            (("communes of the mayenne department", "pays de la loire"), 0.06450780795409959),
            (("communes of the mayenne department", "mayenne"), 0.06430651970933308),
            (("communes of the mayenne department", "communes of france"), 0.06430651970933308),
            (("dolj county", "romania"), 0.06210316274622011),
            (("communes of the aisne department", "france"), 0.06121412191935982),
            (("communes of the aisne department", "departments of france"), 0.061154147171885075),
            (("communes of the aisne department", "regions of france"), 0.0610736374038753),
            (("communes of the aisne department", "aisne"), 0.0610736374038753),
            (("communes of the aisne department", "communes of france"), 0.06106829552353342),
            (("communes of the aisne department", "picardie"), 0.06106829552353342),
            (("list of cities in iowa", "iowa"), 0.06096180216785392),
            (("communes of the pas-de-calais department", "france"), 0.06092322404561475),
            (("communes of the pas-de-calais department", "nord-pas-de-calais"), 0.060818439940830644),
            (("communes of the pas-de-calais department", "departments of france"), 0.060818439940830644),
            (("communes of the pas-de-calais department", "pas-de-calais"), 0.06081222393461464),
            (("communes of the pas-de-calais department", "communes of france"), 0.060757389879780584),
            (("communes of the pas-de-calais department", "regions of france"), 0.06069763264355276),
            (("list of cities in iowa", "united states"), 0.060671615729757905),
            (("list of cities in iowa", "city"), 0.060587490721857234),
            (("communes of the ard\u00e8che department", "ard\u00e8che"), 0.06054437048548179),
            (("communes of the gironde department", "france"), 0.060527739824070746),
            (("communes of the gironde department", "departments of france"), 0.06039351224360661),
            (("communes of the gironde department", "aquitaine"), 0.06039351224360661),
            (("communes of the ard\u00e8che department", "france"), 0.06032052234614069),
            (("communes of the gironde department", "regions of france"), 0.060301915270289205),
            (("communes of the gironde department", "gironde"), 0.060301915270289205),
            (("communes of the gironde department", "communes of france"), 0.0602939503160877),
            (("communes of the calvados department", "france"), 0.060043171393175006),
            (("communes of the calvados department", "calvados (department)"), 0.05998021495902743),
            (("communes of the calvados department", "basse-normandie"), 0.05997405921879967),
            (("communes of the calvados department", "regions of france"), 0.059928917123796076),
            (("communes of the calvados department", "communes of france"), 0.059922761383568314),
            (("communes of the calvados department", "departments of france"), 0.059922761383568314),
            (("communes of the sarthe department", "france"), 0.05927104905594683),
            (("communes of the sarthe department", "departments of france"), 0.05914343015594941),
            (("communes of the sarthe department", "pays de la loire"), 0.05914343015594941),
            (("list of cities in oklahoma", "united states"), 0.05910910807650523),
            (("list of cities in oklahoma", "oklahoma"), 0.059087994103277745),
            (("communes of the sarthe department", "regions of france"), 0.05900435321229897),
            (("communes of the sarthe department", "sarthe"), 0.05900435321229897),
            (("communes of the sarthe department", "communes of france"), 0.058992986346712156),
            (("communes of the ard\u00e8che department", "departments of france"), 0.058313953964305214),
            (("communes of the vaucluse department", "france"), 0.0582215072704682),
            (("communes of the ain department", "france"), 0.05820287104163154),
            (("communes of the ain department", "regions of france"), 0.058098377833690054),
            (("communes of the ain department", "departments of france"), 0.058088160720024665),
            (("communes of the ain department", "rh\u00f4ne-alpes"), 0.058088160720024665),
            (("list of settlements in latvia", "town rights"), 0.058072738664843984),
            (("list of settlements in latvia", "latvia"), 0.058072738664843984),
            (("communes of the ain department", "ain"), 0.058060691758694764),
            (("communes of the ain department", "communes of france"), 0.058050474645029375),
            (("dolj county", "commune in romania"), 0.058027756557168374),
            (("list of cities in oklahoma", "city"), 0.05769548086428234),
            (("communes of the vaucluse department", "provence-alpes-c\u00f4te d'azur"), 0.05762330972616287),
            (("communes of the vaucluse department", "vaucluse"), 0.05757507286654877),
            (("communes of the vaucluse department", "communes of france"), 0.057249058229156886),
            (("list of cities in idaho", "idaho"), 0.05592269479675333),
            (("communes of the alpes-maritimes department", "france"), 0.05590244614172462),
            (("list of cities in idaho", "united states"), 0.05579352323901034),
            (("list of cities in arkansas", "arkansas"), 0.055685804983486645),
            (("list of cities in arkansas", "united states"), 0.055496087662295225),
            (("communes of the alpes-maritimes department", "alpes-maritimes"), 0.05546829748267057),
            (("communes of the alpes-maritimes department", "communes of france"), 0.05514943701679452),
            (("communes of the alpes-maritimes department", "departments of france"), 0.05498048765654943),
            (("communes of the alpes-maritimes department", "provence-alpes-c\u00f4te d'azur"), 0.054957210189137885),
            (("list of cities in idaho", "city"), 0.05482154369560222),
            (("list of cities in arkansas", "city"), 0.05477302470988877),
            (("communes of the alpes-maritimes department", "regions of france"), 0.054632877476537015),
            (("list of japan international footballers", "association football"), 0.053803949094716884),
            (("list of civil parishes in essex", "essex"), 0.05372816983569708),
            (("list of japan international footballers", "japan national football team"), 0.05362604480722356),
            (("list of japan international footballers", "japan"), 0.053382262714126404),
            (("list of cities in kentucky", "kentucky"), 0.053245109363359605),
            (("list of cities in kentucky", "united states"), 0.05292268338223833),
            (("arrondissement of largenti\u00e8re", "france"), 0.05277849773205804),
            (("list of cities in kentucky", "city"), 0.052724052799904504),
            (("communes of the bouches-du-rh\u00f4ne department", "france"), 0.052208389249882185),
            (("districts of bangladesh", "bangladesh"), 0.05206540586486136)]
